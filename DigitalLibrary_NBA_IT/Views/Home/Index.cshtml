@model IEnumerable<DigitalLibrary_NBA_IT.Models.Books>

@{
    ViewBag.Title = "Home Page";
}

<!-- הודעת הצלחה -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- תמונת רקע לכל העמוד -->
<style>
    body {
        background-image: url('https://images.unsplash.com/photo-1524995997946-a1c2e315a42f?w=1920&h=1080&fit=crop');
        background-size: cover;
        background-repeat: no-repeat;
        background-position: center;
        background-attachment: fixed;
        margin: 0;
        padding: 0;
    }

    .welcome-text {
        background-color: rgba(255, 255, 255, 0.8);
        color: #000;
        padding: 10px 20px;
        display: inline-block;
        border-radius: 8px;
        font-size: 2rem;
        font-weight: bold;
        text-align: center;
        margin: 0 auto;
    }

    .search-bar {
        margin-bottom: 20px;
    }

    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border-radius: 10px;
    }

        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

    .popular-badge {
        background-color: gold;
        color: black;
        font-weight: bold;
        font-size: 0.9rem;
        border-radius: 5px;
        padding: 5px 10px;
        display: inline-block;
        margin-top: 5px;
    }

    .img-fixed {
        width: 100%;
        height: 300px;
        object-fit: contain;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        background-color: #f8f9fa;
    }

    .btn-primary, .btn-secondary {
        font-size: 0.9rem;
        padding: 10px 20px;
        border-radius: 8px;
        transition: transform 0.3s ease, box-shadow 0.3s ease, background-color 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

        .btn-primary:hover {
            transform: scale(1.1);
            background-color: #0056b3;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
    }

        .btn-secondary:hover {
            transform: scale(1.1);
            background-color: #5a6268;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

    .button-container {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        margin-top: 15px;
    }

    .modal-footer {
        justify-content: center;
        gap: 15px;
    }

    .btn-buy-now {
        background-color: #28a745;
        color: white;
        border-radius: 5px;
        font-size: 1rem;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .btn-buy-now:hover {
            background-color: #218838;
        }

    .btn-add-to-cart {
        background-color: #17a2b8;
        color: white;
        border-radius: 5px;
        font-size: 1rem;
        padding: 10px 20px;
        transition: background-color 0.3s ease;
    }

        .btn-add-to-cart:hover {
            background-color: #138496;
        }

    .search-bar {
        flex: 1;
    }

    .form-select {
        min-width: 150px;
    }

    .btn-secondary {
        white-space: nowrap;
    }
    .price-filter-container {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: 5px;
    }

        .price-filter-container input[type="number"] {
            width: 60px;
            text-align: center;
            padding: 5px;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        .price-filter-container button {
            padding: 5px 10px;
            border-radius: 4px;
            border: none;
            background-color: #28a745;
            color: white;
            font-size: 14px;
            cursor: pointer;
        }

            .price-filter-container button:hover {
                background-color: #218838;
            }

</style>

<div class="container mt-5">
    <h1 class="text-center mb-4 welcome-text">Welcome to the Digital Library</h1>

    <!-- שורת חיפוש ומיון -->
    <div class="container mt-3 mb-4">
        <form method="get" action="@Url.Action("Index", "Home")" class="d-flex align-items-center">
            <div class="input-group search-bar">
                <input type="text" name="query" class="form-control" placeholder="Search for a book by title, author, or publisher..." value="@ViewBag.Query" />
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
            <button type="button" class="btn btn-secondary ms-2" data-bs-toggle="modal" data-bs-target="#genresModal">
                View Genres
            </button>

            <button type="button" class="btn btn-secondary ms-2" data-bs-toggle="modal" data-bs-target="#authorsModal">
                View Authors
            </button>
            <select name="sortOption" class="form-select ms-2 w-auto" onchange="this.form.submit()">
                <option value="" @(string.IsNullOrEmpty(ViewBag.SortOption) ? "selected" : "")>Sort By</option>
                <option value="priceAsc" @(ViewBag.SortOption == "priceAsc" ? "selected" : "")>Price: Low to High</option>
                <option value="priceDesc" @(ViewBag.SortOption == "priceDesc" ? "selected" : "")>Price: High to Low</option>
                <option value="popular" @(ViewBag.SortOption == "popular" ? "selected" : "")>Most Popular</option>
                <option value="year" @(ViewBag.SortOption == "year" ? "selected" : "")>Year Published</option>
                <option value="discount" @(ViewBag.SortOption == "discount" ? "selected" : "")>Discounted</option>
            </select>
            <!-- סינון לפי מחיר -->
            <div class="price-filter-container">
                <input type="number" step="0.5" name="minPrice" placeholder="Min" value="@ViewBag.MinPrice" />
                <input type="number" step="0.5" name="maxPrice" placeholder="Max" value="@ViewBag.MaxPrice" />
                <button type="submit">:Filter by price</button>
            </div>

        </form>
    </div>
    <!-- Modal להצגת הז'אנרים -->
    <div class="modal fade" id="genresModal" tabindex="-1" aria-labelledby="genresModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="genresModalLabel">Genres</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row" id="genresList">
                        <!-- רשימת הז'אנרים תיטען כאן -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal להצגת המחברים -->
    <div class="modal fade" id="authorsModal" tabindex="-1" aria-labelledby="authorsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="authorsModalLabel">Authors</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row" id="authorsList">
                        <!-- רשימת המחברים תיטען כאן -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal לחלון בחירת אפשרות -->
    <div class="modal fade" id="purchaseModal" tabindex="-1" aria-labelledby="purchaseModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="purchaseModalLabel">Choose an Option</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    <button id="buyNowButton" class="btn btn-buy-now">Buy Now</button>
                    <button id="addToCartButton" class="btn btn-add-to-cart">Add to Cart</button>
                </div>
            </div>
        </div>
    </div>
    <!--     הצגת פרטי הספר    -->
    <div class="modal fade" id="bookDetailsModal" tabindex="-1" aria-labelledby="bookDetailsLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="bookDetailsLabel">Book Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="bookDetailsContent">
                    <!-- התוכן ייטען כאן -->
                </div>
            </div>
        </div>
    </div>

    <!-- תצוגת הספרים -->
    <div class="row">
        @if (Model.Any())
        {
            foreach (var book in Model)
            {
                decimal price = 0;
                decimal.TryParse(book.Price.Trim(), out price);
                decimal originalPrice = 0;
                decimal.TryParse(book.OriginalPrice, out originalPrice);



                bool isPopular = price > 20;

                <div class="col-md-3 mb-4">
                    <div class="card">
                        <img src="@(!string.IsNullOrEmpty(book.ImageUrl)
                                    ? book.ImageUrl.Replace("/upload/", "/upload/w_300,h_200,c_fill,dpr_2.0/")
                                    : "https://via.placeholder.com/300x200?text=No+Image")"
                             class="card-img-top img-fixed"
                             alt="@book.Title"
                             onerror="this.onerror=null; this.style.display='none';">
                        <div class="card-body">
                            <h5 class="card-title">@book.Title</h5>
                            <p class="card-text">Publisher: @book.Publish</p>
                            <p class="card-text">Age: @book.age+</p>
                            @if (originalPrice > price)
                            {
                                <p class="card-text">
                                    <span style="text-decoration: line-through; color: red;">
                                        $@(originalPrice.ToString("F2"))
                                    </span>
                                    <span style="color: green; font-weight: bold;">
                                        $@(price.ToString("F2"))
                                    </span>
                                </p>
                            }
                            else
                            {
                                <p class="card-text">Price (Buy): $@(price.ToString("F2"))</p>
                            }

                            @if (!isPopular)
                            {
                                <p class="card-text">Price (Borrow): $@(Math.Round(price / 4, 2))</p>
                            }
                            else
                            {
                                <span class="popular-badge">Popular Book</span>
                            }
                            <p class="card-text">Copies Available: @book.CopiesAvailable</p>

                            <div class="button-container">
                                <button class="btn btn-success" onclick="openBookDetails('@book.Book_ID')">Book page</button>


                                <button class="btn btn-primary" onclick="showPurchaseModal('@book.Book_ID', 'buy')">Buy</button>
                                @if (!isPopular)
                                {
                                    <button class="btn btn-secondary" onclick="handleBorrow('@book.Book_ID')">Borrow</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <p class="text-center text-danger">No books found matching your search.</p>
            </div>
        }
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
    const genresList = document.getElementById("genresList");

    fetch('@Url.Action("GetGenres", "Home")')
        .then(response => response.json())
        .then(genres => {
            genresList.innerHTML = genres.map(genre => `
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">${genre.Name}</h5>
                            <button class="btn btn-primary btn-sm" onclick="filterBooksByGenre('${genre.Name}')">View Books</button>
                        </div>
                    </div>
                </div>
            `).join("");
        })
        .catch(error => console.error("Error loading genres:", error));
});

function filterBooksByGenre(genreName) {
    window.location.href = `@Url.Action("Index", "Home")?genreName=${encodeURIComponent(genreName)}`;
}

    document.addEventListener("DOMContentLoaded", function () {
        const authorsList = document.getElementById("authorsList");

        fetch('@Url.Action("GetAuthors", "Home")')
            .then(response => response.json())
            .then(authors => {
                authorsList.innerHTML = authors.map(author => `
                    <div class="col-md-4 mb-3">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">${author.Name}</h5>
                                <p class="card-text">${author.Bio}</p>
                                <button class="btn btn-primary btn-sm" onclick="filterBooksByAuthor('${author.Name}')">View Books</button>
                            </div>
                        </div>
                    </div>
                `).join("");
            })
            .catch(error => console.error("Error loading authors:", error));
    });

    function filterBooksByAuthor(authorName) {
        window.location.href = `@Url.Action("Index", "Home")?authorName=${encodeURIComponent(authorName)}`;
    }

    function handleBorrow(bookId) {
        fetch(`/Home/CheckBorrowConditions?id=${bookId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showPurchaseModal(bookId, 'borrow');
                } else {
                    alert(data.message);
                }
            })
            .catch(error => console.error('Error:', error));
    }

    function showPurchaseModal(bookId, actionType) {
        const modal = new bootstrap.Modal(document.getElementById('purchaseModal'));
        const buyNowButton = document.getElementById('buyNowButton');
        const addToCartButton = document.getElementById('addToCartButton');

        buyNowButton.onclick = () => {
            if (actionType === 'borrow') {
                window.location.href = `/Payment/Payment?bookId=${bookId}&type=borrow`;
            } else {
                window.location.href = `/Payment/Payment?bookId=${bookId}&type=buy`;
            }
        };

        addToCartButton.onclick = () => {
            window.location.href = `/Home/AddToCart?id=${bookId}&type=${actionType}`;
        };

        modal.show();
    }

    function openBookDetails(bookId) {
        if (!bookId) {
            alert("Invalid Book ID");
            return;
        }

        fetch(`/Home/GetBookDetails?id=${bookId}`)
            .then(response => response.json())
            .then(data => {
                if (!data.success) {
                    alert(data.message);
                    return;
                }

                const content = `
                <div class="row">
                    <div class="col-md-4">
                        <img src="${data.data.Book.ImageUrl || 'https://via.placeholder.com/300x400'}" class="img-fluid" alt="${data.data.Book.Title}">
                    </div>
                    <div class="col-md-8">
                        <h4>${data.data.Book.Title}</h4>
                        <p><strong>Publisher:</strong> ${data.data.Book.Publish}</p>
                        <p><strong>Price:</strong> $${data.data.Book.Price}</p>
                        <p><strong>Copies Available:</strong> ${data.data.Book.CopiesAvailable}</p>
                    </div>
                </div>
                <hr>
                
                <hr>
                <h5>Authors:</h5>
                <ul>
                    ${data.data.Authors.map(author => `<li>${author.Name} - ${author.Bio}</li>`).join('')}
                </ul>
                <hr>
                <h5>Genres:</h5>
                <ul>
                    ${data.data.Genres.map(genre => `<li>${genre}</li>`).join('')}
                </ul>
                <hr>
                <h5>Waitlist:</h5>
                <p>${data.data.WaitlistCount} user(s) waiting for this book</p>
                <ul>
                    ${data.data.Waitlist.map(w => `<li>User ID: ${w.User_ID}, Date Added: ${new Date(parseInt(w.DateAdded.replace(/[^0-9]/g, ''))).toLocaleDateString()}</li>`).join('')}
                </ul>
                <hr>
                <h5>Reviews:</h5>
                <ul>
                    ${data.data.Reviews.length > 0
                        ? data.data.Reviews.map(review => `
                            <li>
                                <strong>User ID: ${review.User_ID}</strong> rated ${review.Rating}/5 on ${new Date(review.ReviewDate).toLocaleDateString()}
                                <p>${review.Feedback}</p>
                            </li>
                        `).join('')
                        : `<li>No reviews available for this book.</li>`}
                </ul>
                <div class="text-center">
                    <button class="btn btn-primary" onclick="shareOnFacebook('${data.data.Book.Title}', '${window.location.href}')">Share on Facebook</button>
                    <button class="btn btn-primary" onclick="shareOnTwitter('${data.data.Book.Title}', '${window.location.href}')">Share on Twitter</button>
                </div>

            `;
                document.getElementById('bookDetailsContent').innerHTML = content;
                const modal = new bootstrap.Modal(document.getElementById('bookDetailsModal'));
                modal.show();
            })
            .catch(error => {
                console.error("Error fetching book details:", error);
                alert("An error occurred while fetching book details.");
            });
    }


    function shareOnFacebook(title, url) {
        const fbUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}&quote=${encodeURIComponent(`Check out this book: ${title}`)}`;
        window.open(fbUrl, '_blank');
    }

    function shareOnTwitter(title, url) {
        const twitterUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(`Check out this book: ${title}`)}`;
        window.open(twitterUrl, '_blank');
    }



</script>


